@using ASP_MVC.Models
@model User

@{
    ViewData["Title"] = "Register";

    bool wasValidation = TempData["WasValid"] != null;
    
}

<h2>Register</h2>
@if (wasValidation &&  Model != null && !string.IsNullOrEmpty(Model.Name))
{
    <div class="alert alert-success" role="alert">
        User @Model.Name has been registered successfully!
    </div>
}
@if (wasValidation && Model == null)
{
    <div class="alert alert-danger" role="alert">
        User registration failed!
    </div>
}

<form asp-action="RegisterPost" method="post" class="needs-validation" novalidate>
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Age" class="control-label"></label>
        <input asp-for="Age" class="form-control" />
        <span asp-validation-for="Age" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Position" class="control-label"></label>
        <input asp-for="Position" class="form-control" />
        <span asp-validation-for="Position" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Salary" class="control-label"></label>
        <input asp-for="Salary" class="form-control" />
        <span asp-validation-for="Salary" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</form>